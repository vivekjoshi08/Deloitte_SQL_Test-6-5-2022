use moviedatabase;

create table actor( 
act_id int primary key,
act_name varchar(50),
act_gender char(1));
insert into actor( act_id, act_name, act_gender)
values ( 301, 'ANUSHKA', 'F'),(302, 'PRABHAS', 'M'), (303, 'PUNITH', 'M'), (304, 'JERMY', 'M');
select * from actor;

CREATE TABLE DIRECTOR( 
DIR_ID INT PRIMARY KEY, 
DIR_NAME VARCHAR(50), 
DIR_PHONE VARCHAR(20));
INSERT INTO DIRECTOR( DIR_ID, DIR_NAME, DIR_PHONE)
VALUES (60, 'RAJAMOULI', 8751611001),
(61, 'HITCHCOCK', 7766138911),
(62, 'FARAN', 9986776531),
(63, 'STEVEN SPIELBERG', 8989776530);
select * from DIRECTOR;

CREATE TABLE MOVIES( 
MOV_ID INT PRIMARY KEY, 
MOV_TITLE VARCHAR(50), 
MOV_YEAR INT, 
MOV_LANG VARCHAR(50), 
DIR_ID INT REFERENCES DIRECTOR(DIR_ID));
INSERT INTO MOVIES( MOV_ID, MOV_TITLE, MOV_YEAR, MOV_LANG, DIR_ID)
VALUES( 1001, 'BAHUBALI-2', 2017, 'TELAGU', 60),
(1002, 'BAHUBALI-1', 2015, 'TELAGU', 60),
(1003, 'AKASH', 2008, 'KANNADA', 61),
(1004, 'WAR HORSE', 2011, 'ENGLISH', 63);
select * from MOVIES;

CREATE TABLE MOVIE_CAST(
ACT_ID INT REFERENCES ACTOR(ACT_ID), 
MOV_ID INT REFERENCES MOVIES(MOV_ID), 
ROLE VARCHAR(20));
INSERT INTO MOVIE_CAST(ACT_ID, MOV_ID, ROLE)
VALUES( 301, 1002, 'HEROINE'),
(301, 1001, 'HEROINE'),
(303, 1003, 'HERO'),
(303, 1002, 'GUEST'),
(304, 1004, 'HERO');
select * from MOVIE_CAST;

CREATE TABLE RATING(
MOV_ID INT REFERENCES MOVIES(MOV_ID), 
REV_STARS INT);
INSERT INTO RATING(MOV_ID, REV_STARS)
VALUES(1001, 4), (1002, 2), (1003, 5), (1004, 4);
select * from RATING;

/*1*/
SELECT MOV_TITLE FROM MOVIES
NATURAL JOIN DIRECTOR
WHERE DIR_NAME='HITCHCOCK';

/*2*/
SELECT MOV_TITLE FROM MOVIES
WHERE MOV_ID IN 
(SELECT MOV_ID FROM MOVIE_CAST WHERE ACT_ID IN 
(SELECT ACT_ID FROM ACTOR WHERE ACT_ID IN 
(SELECT ACT_ID FROM MOVIE_CAST GROUP BY ACT_ID HAVING COUNT(ACT_ID)>=2)));

/*3*/
SELECT ACT_NAME FROM ACTOR
JOIN MOVIE_CAST ON MOVIE_CAST.ACT_ID= ACTOR.ACT_ID
JOIN MOVIES ON MOVIES.MOV_ID= MOVIE_CAST.MOV_ID
WHERE MOV_YEAR>2015 OR MOV_YEAR<2000;

/*4*/
SELECT MOV_TITLE, MAX(REV_STARS) FROM MOVIES
NATURAL JOIN RATING 
GROUP BY MOV_TITLE HAVING max(REV_STARS)>0
ORDER BY MOV_TITLE;

/*5*/
UPDATE RATING 
NATURAL JOIN MOVIES
NATURAL JOIN DIRECTOR
SET REV_STARS =5
WHERE DIR_NAME='STEVEN SPIELBERG';

