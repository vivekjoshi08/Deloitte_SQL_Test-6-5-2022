use moviedatabase;

CREATE TABLE ACTOR (
ACT_ID INTEGER PRIMARY KEY,
ACT_NAME VARCHAR(20),
ACT_GENDER CHAR(1));

CREATE TABLE DIRECTOR(
DIR_ID INT PRIMARY KEY,
DIR_NAME VARCHAR(20),
DIR_PHONE INT);

CREATE TABLE MOVIES(
MOV_ID INT PRIMARY KEY,
MOV_TITLE VARCHAR(25),
MOV_YEAR INT,
MOV_LANG VARCHAR(15),
DIR_ID INT,
FOREIGN KEY (DIR_ID) REFERENCES DIRECTOR(DIR_ID));

CREATE TABLE MOVIE_CAST(
ACT_ID INT,
MOV_ID INT,
ROLE VARCHAR(10),
PRIMARY KEY (ACT_ID,MOV_ID),
FOREIGN KEY (ACT_ID) REFERENCES ACTOR(ACT_ID),
FOREIGN KEY (MOV_ID) REFERENCES MOVIES(MOV_ID));

CREATE TABLE RATING(
MOV_ID INT PRIMARY KEY,
REV_STARS VARCHAR(25),
FOREIGN KEY (MOV_ID) REFERENCES MOVIES(MOV_ID));

/*INSERTING VALUES*/

INSERT INTO ACTOR VALUES (301, 'ANUSHKA','F'),
(302,'PRABHAS','M'),
(303, ' PUNITH','M'),
(304,'JEREMY','M');

SELECT * FROM ACTOR;

INSERT INTO DIRECTOR VALUES (60,'RAJAMOULI',8751611001),
(61,'HITCHCOCK',7766138911),
(62,'FARAN',9986776531),
(63,'STEVEN SPIELBERG',8989776530);
ALTER TABLE DIRECTOR MODIFY DIR_PHONE BIGINT;
SELECT * FROM DIRECTOR;

INSERT INTO MOVIES VALUES(1001,'BAHUBALI-2',2017,'TELUGU',60),
(1002,'BAHUBALI-1',2015,'TELUGU',60),
(1003,'AKASH',2008,'KANNADA',61),
(1004,'WAR HORSE',2011,'ENGLISH',63);

SELECT * FROM MOVIES;

INSERT INTO MOVIE_CAST VALUES (301,1002,'HEROINE'),
(301,1001,'HEROINE'),
(303,1003,'HERO'),
(303,1002,'GUEST'),
(304,1004,'HERO');

SELECT * FROM MOVIE_CAST;

INSERT INTO RATING VALUES(1001,4),
(1002,2),
(1003,5),
(1004,4);

SELECT *FROM RATING;

/*ANSWERS*/

#1
SELECT M.MOV_TITLE FROM MOVIES M ,DIRECTOR D
 WHERE D.DIR_NAME ='HITCHCOCK'
 AND D.DIR_ID = M.DIR_ID;
 
 #2
 SELECT MOV_TITLE FROM MOVIES M,MOVIE_CAST MC
 WHERE M.MOV_ID = MC.MOV_ID AND ACT_ID IN
 (SELECT ACT_ID FROM MOVIE_CAST GROUP BY ACT_ID HAVING COUNT(ACT_ID)>1)
 GROUP BY MOV_TITLE HAVING COUNT(MOV_TITLE)>1;
 
 #3
 SELECT ACT_NAME FROM ACTOR A INNER JOIN MOVIE_CAST MC
 WHERE A.ACT_ID =MC.ACT_ID AND MC.MOV_ID IN(SELECT MOV_ID FROM MOVIES
 WHERE MOV_YEAR NOT BETWEEN 2000 AND 2015) GROUP BY ACT_NAME HAVING COUNT(*)>1;
 
 #4
 SELECT MOV_TITLE, MAX(REV_STARS) FROM MOVIES M INNER JOIN RATING R
 ON M.MOV_ID=R.MOV_ID GROUP BY MOV_TITLE ORDER BY MOV_TITLE;
 
#5
UPDATE RATING SET REV_STARS = 5 WHERE MOV_ID IN
(SELECT MOV_ID FROM MOVIES M, DIRECTOR D WHERE D.DIR_ID=M.DIR_ID
AND DIR_NAME = 'STEVEN SPIELBERG');
SELECT * FROM RATING;